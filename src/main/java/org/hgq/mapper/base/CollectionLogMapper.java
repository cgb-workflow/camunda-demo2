package org.hgq.mapper.base;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.hgq.domain.base.CollectionLog;
import org.hgq.domain.base.CollectionLogExample;

public interface CollectionLogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_log
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @SelectProvider(type=CollectionLogSqlProvider.class, method="countByExample")
    long countByExample(CollectionLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_log
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @DeleteProvider(type=CollectionLogSqlProvider.class, method="deleteByExample")
    int deleteByExample(CollectionLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_log
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @Delete({
        "delete from collection_log",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_log
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @Insert({
        "insert into collection_log (id, collection_case_id, ",
        "collection_object, call_way, ",
        "call_phone, call_result, ",
        "talk_result, promise_repay_time, ",
        "promise_repay_amount, call_time, ",
        "call_duration, call_recording, ",
        "emp_id, emp_NAME, remark, ",
        "version, deleted, ",
        "create_time, update_time)",
        "values (#{id,jdbcType=BIGINT}, #{collectionCaseId,jdbcType=BIGINT}, ",
        "#{collectionObject,jdbcType=TINYINT}, #{callWay,jdbcType=TINYINT}, ",
        "#{callPhone,jdbcType=VARCHAR}, #{callResult,jdbcType=TINYINT}, ",
        "#{talkResult,jdbcType=TINYINT}, #{promiseRepayTime,jdbcType=TIMESTAMP}, ",
        "#{promiseRepayAmount,jdbcType=DECIMAL}, #{callTime,jdbcType=TIMESTAMP}, ",
        "#{callDuration,jdbcType=INTEGER}, #{callRecording,jdbcType=VARCHAR}, ",
        "#{empId,jdbcType=BIGINT}, #{empName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, ",
        "#{version,jdbcType=INTEGER}, #{deleted,jdbcType=TINYINT}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(CollectionLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_log
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @InsertProvider(type=CollectionLogSqlProvider.class, method="insertSelective")
    int insertSelective(CollectionLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_log
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @SelectProvider(type=CollectionLogSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="collection_case_id", property="collectionCaseId", jdbcType=JdbcType.BIGINT),
        @Result(column="collection_object", property="collectionObject", jdbcType=JdbcType.TINYINT),
        @Result(column="call_way", property="callWay", jdbcType=JdbcType.TINYINT),
        @Result(column="call_phone", property="callPhone", jdbcType=JdbcType.VARCHAR),
        @Result(column="call_result", property="callResult", jdbcType=JdbcType.TINYINT),
        @Result(column="talk_result", property="talkResult", jdbcType=JdbcType.TINYINT),
        @Result(column="promise_repay_time", property="promiseRepayTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="promise_repay_amount", property="promiseRepayAmount", jdbcType=JdbcType.DECIMAL),
        @Result(column="call_time", property="callTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="call_duration", property="callDuration", jdbcType=JdbcType.INTEGER),
        @Result(column="call_recording", property="callRecording", jdbcType=JdbcType.VARCHAR),
        @Result(column="emp_id", property="empId", jdbcType=JdbcType.BIGINT),
        @Result(column="emp_NAME", property="empName", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="version", property="version", jdbcType=JdbcType.INTEGER),
        @Result(column="deleted", property="deleted", jdbcType=JdbcType.TINYINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<CollectionLog> selectByExample(CollectionLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_log
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @Select({
        "select",
        "id, collection_case_id, collection_object, call_way, call_phone, call_result, ",
        "talk_result, promise_repay_time, promise_repay_amount, call_time, call_duration, ",
        "call_recording, emp_id, emp_NAME, remark, version, deleted, create_time, update_time",
        "from collection_log",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="collection_case_id", property="collectionCaseId", jdbcType=JdbcType.BIGINT),
        @Result(column="collection_object", property="collectionObject", jdbcType=JdbcType.TINYINT),
        @Result(column="call_way", property="callWay", jdbcType=JdbcType.TINYINT),
        @Result(column="call_phone", property="callPhone", jdbcType=JdbcType.VARCHAR),
        @Result(column="call_result", property="callResult", jdbcType=JdbcType.TINYINT),
        @Result(column="talk_result", property="talkResult", jdbcType=JdbcType.TINYINT),
        @Result(column="promise_repay_time", property="promiseRepayTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="promise_repay_amount", property="promiseRepayAmount", jdbcType=JdbcType.DECIMAL),
        @Result(column="call_time", property="callTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="call_duration", property="callDuration", jdbcType=JdbcType.INTEGER),
        @Result(column="call_recording", property="callRecording", jdbcType=JdbcType.VARCHAR),
        @Result(column="emp_id", property="empId", jdbcType=JdbcType.BIGINT),
        @Result(column="emp_NAME", property="empName", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="version", property="version", jdbcType=JdbcType.INTEGER),
        @Result(column="deleted", property="deleted", jdbcType=JdbcType.TINYINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    CollectionLog selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_log
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @UpdateProvider(type=CollectionLogSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") CollectionLog record, @Param("example") CollectionLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_log
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @UpdateProvider(type=CollectionLogSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") CollectionLog record, @Param("example") CollectionLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_log
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @UpdateProvider(type=CollectionLogSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CollectionLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_log
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @Update({
        "update collection_log",
        "set collection_case_id = #{collectionCaseId,jdbcType=BIGINT},",
          "collection_object = #{collectionObject,jdbcType=TINYINT},",
          "call_way = #{callWay,jdbcType=TINYINT},",
          "call_phone = #{callPhone,jdbcType=VARCHAR},",
          "call_result = #{callResult,jdbcType=TINYINT},",
          "talk_result = #{talkResult,jdbcType=TINYINT},",
          "promise_repay_time = #{promiseRepayTime,jdbcType=TIMESTAMP},",
          "promise_repay_amount = #{promiseRepayAmount,jdbcType=DECIMAL},",
          "call_time = #{callTime,jdbcType=TIMESTAMP},",
          "call_duration = #{callDuration,jdbcType=INTEGER},",
          "call_recording = #{callRecording,jdbcType=VARCHAR},",
          "emp_id = #{empId,jdbcType=BIGINT},",
          "emp_NAME = #{empName,jdbcType=VARCHAR},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "version = #{version,jdbcType=INTEGER},",
          "deleted = #{deleted,jdbcType=TINYINT},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(CollectionLog record);
}