package org.hgq.mapper.base;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.hgq.domain.base.CollectionCase;
import org.hgq.domain.base.CollectionCaseExample;

import java.util.List;

public interface CollectionCaseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Thu Aug 19 11:25:54 CST 2021
     */
    @SelectProvider(type=CollectionCaseSqlProvider.class, method="countByExample")
    long countByExample(CollectionCaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Thu Aug 19 11:25:54 CST 2021
     */
    @DeleteProvider(type=CollectionCaseSqlProvider.class, method="deleteByExample")
    int deleteByExample(CollectionCaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Thu Aug 19 11:25:54 CST 2021
     */
    @Delete({
        "delete from collection_case",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Thu Aug 19 11:25:54 CST 2021
     */
    @Insert({
        "insert into collection_case (id, user_no, ",
        "user_name, id_card, ",
        "mobile, case_source, ",
        "product_code, overdue_days, ",
        "debt_amount, deferrable_amount, ",
        "lifecycle, allocation_time, ",
        "group_no, group_name, ",
        "emp_no, emp_name, ",
        "collection_result, collection_log_time, ",
        "process_instance_id, remark, ",
        "version, deleted, ",
        "create_time, update_time)",
        "values (#{id,jdbcType=BIGINT}, #{userNo,jdbcType=VARCHAR}, ",
        "#{userName,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, ",
        "#{mobile,jdbcType=VARCHAR}, #{caseSource,jdbcType=TINYINT}, ",
        "#{productCode,jdbcType=INTEGER}, #{overdueDays,jdbcType=INTEGER}, ",
        "#{debtAmount,jdbcType=DECIMAL}, #{deferrableAmount,jdbcType=DECIMAL}, ",
        "#{lifecycle,jdbcType=TINYINT}, #{allocationTime,jdbcType=TIMESTAMP}, ",
        "#{groupNo,jdbcType=VARCHAR}, #{groupName,jdbcType=VARCHAR}, ",
        "#{empNo,jdbcType=VARCHAR}, #{empName,jdbcType=VARCHAR}, ",
        "#{collectionResult,jdbcType=TINYINT}, #{collectionLogTime,jdbcType=TIMESTAMP}, ",
        "#{processInstanceId,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, ",
        "#{version,jdbcType=INTEGER}, #{deleted,jdbcType=TINYINT}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(CollectionCase record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Thu Aug 19 11:25:54 CST 2021
     */
    @InsertProvider(type=CollectionCaseSqlProvider.class, method="insertSelective")
    int insertSelective(CollectionCase record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Thu Aug 19 11:25:54 CST 2021
     */
    @SelectProvider(type=CollectionCaseSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="user_no", property="userNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_card", property="idCard", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="case_source", property="caseSource", jdbcType=JdbcType.TINYINT),
        @Result(column="product_code", property="productCode", jdbcType=JdbcType.INTEGER),
        @Result(column="overdue_days", property="overdueDays", jdbcType=JdbcType.INTEGER),
        @Result(column="debt_amount", property="debtAmount", jdbcType=JdbcType.DECIMAL),
        @Result(column="deferrable_amount", property="deferrableAmount", jdbcType=JdbcType.DECIMAL),
        @Result(column="lifecycle", property="lifecycle", jdbcType=JdbcType.TINYINT),
        @Result(column="allocation_time", property="allocationTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="group_no", property="groupNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="group_name", property="groupName", jdbcType=JdbcType.VARCHAR),
        @Result(column="emp_no", property="empNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="emp_name", property="empName", jdbcType=JdbcType.VARCHAR),
        @Result(column="collection_result", property="collectionResult", jdbcType=JdbcType.TINYINT),
        @Result(column="collection_log_time", property="collectionLogTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="process_instance_id", property="processInstanceId", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="version", property="version", jdbcType=JdbcType.INTEGER),
        @Result(column="deleted", property="deleted", jdbcType=JdbcType.TINYINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<CollectionCase> selectByExample(CollectionCaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Thu Aug 19 11:25:54 CST 2021
     */
    @Select({
        "select",
        "id, user_no, user_name, id_card, mobile, case_source, product_code, overdue_days, ",
        "debt_amount, deferrable_amount, lifecycle, allocation_time, group_no, group_name, ",
        "emp_no, emp_name, collection_result, collection_log_time, process_instance_id, ",
        "remark, version, deleted, create_time, update_time",
        "from collection_case",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="user_no", property="userNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_card", property="idCard", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="case_source", property="caseSource", jdbcType=JdbcType.TINYINT),
        @Result(column="product_code", property="productCode", jdbcType=JdbcType.INTEGER),
        @Result(column="overdue_days", property="overdueDays", jdbcType=JdbcType.INTEGER),
        @Result(column="debt_amount", property="debtAmount", jdbcType=JdbcType.DECIMAL),
        @Result(column="deferrable_amount", property="deferrableAmount", jdbcType=JdbcType.DECIMAL),
        @Result(column="lifecycle", property="lifecycle", jdbcType=JdbcType.TINYINT),
        @Result(column="allocation_time", property="allocationTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="group_no", property="groupNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="group_name", property="groupName", jdbcType=JdbcType.VARCHAR),
        @Result(column="emp_no", property="empNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="emp_name", property="empName", jdbcType=JdbcType.VARCHAR),
        @Result(column="collection_result", property="collectionResult", jdbcType=JdbcType.TINYINT),
        @Result(column="collection_log_time", property="collectionLogTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="process_instance_id", property="processInstanceId", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="version", property="version", jdbcType=JdbcType.INTEGER),
        @Result(column="deleted", property="deleted", jdbcType=JdbcType.TINYINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    CollectionCase selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Thu Aug 19 11:25:54 CST 2021
     */
    @UpdateProvider(type=CollectionCaseSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") CollectionCase record, @Param("example") CollectionCaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Thu Aug 19 11:25:54 CST 2021
     */
    @UpdateProvider(type=CollectionCaseSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") CollectionCase record, @Param("example") CollectionCaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Thu Aug 19 11:25:54 CST 2021
     */
    @UpdateProvider(type=CollectionCaseSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CollectionCase record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Thu Aug 19 11:25:54 CST 2021
     */
    @Update({
        "update collection_case",
        "set user_no = #{userNo,jdbcType=VARCHAR},",
          "user_name = #{userName,jdbcType=VARCHAR},",
          "id_card = #{idCard,jdbcType=VARCHAR},",
          "mobile = #{mobile,jdbcType=VARCHAR},",
          "case_source = #{caseSource,jdbcType=TINYINT},",
          "product_code = #{productCode,jdbcType=INTEGER},",
          "overdue_days = #{overdueDays,jdbcType=INTEGER},",
          "debt_amount = #{debtAmount,jdbcType=DECIMAL},",
          "deferrable_amount = #{deferrableAmount,jdbcType=DECIMAL},",
          "lifecycle = #{lifecycle,jdbcType=TINYINT},",
          "allocation_time = #{allocationTime,jdbcType=TIMESTAMP},",
          "group_no = #{groupNo,jdbcType=VARCHAR},",
          "group_name = #{groupName,jdbcType=VARCHAR},",
          "emp_no = #{empNo,jdbcType=VARCHAR},",
          "emp_name = #{empName,jdbcType=VARCHAR},",
          "collection_result = #{collectionResult,jdbcType=TINYINT},",
          "collection_log_time = #{collectionLogTime,jdbcType=TIMESTAMP},",
          "process_instance_id = #{processInstanceId,jdbcType=VARCHAR},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "version = #{version,jdbcType=INTEGER},",
          "deleted = #{deleted,jdbcType=TINYINT},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(CollectionCase record);
}