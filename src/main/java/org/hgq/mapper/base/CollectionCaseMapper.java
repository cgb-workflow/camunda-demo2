package org.hgq.mapper.base;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.hgq.domain.base.CollectionCase;
import org.hgq.domain.base.CollectionCaseExample;

import java.util.List;

public interface CollectionCaseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @SelectProvider(type=CollectionCaseSqlProvider.class, method="countByExample")
    long countByExample(CollectionCaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @DeleteProvider(type=CollectionCaseSqlProvider.class, method="deleteByExample")
    int deleteByExample(CollectionCaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @Delete({
        "delete from collection_case",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @Insert({
        "insert into collection_case (id, user_no, ",
        "user_id, product_source, ",
        "product_code, overdue_days, ",
        "amount, surplus_amount, ",
        "status, allocation_time, ",
        "finish_time, emp_id, ",
        "talk_result, collection_log_time, ",
        "process_instance_id, performance_id, ",
        "remark, version, ",
        "deleted, create_time, ",
        "update_time)",
        "values (#{id,jdbcType=BIGINT}, #{userNo,jdbcType=VARCHAR}, ",
        "#{userId,jdbcType=BIGINT}, #{productSource,jdbcType=TINYINT}, ",
        "#{productCode,jdbcType=INTEGER}, #{overdueDays,jdbcType=INTEGER}, ",
        "#{amount,jdbcType=DECIMAL}, #{surplusAmount,jdbcType=DECIMAL}, ",
        "#{status,jdbcType=TINYINT}, #{allocationTime,jdbcType=TIMESTAMP}, ",
        "#{finishTime,jdbcType=TIMESTAMP}, #{empId,jdbcType=BIGINT}, ",
        "#{talkResult,jdbcType=TINYINT}, #{collectionLogTime,jdbcType=TIMESTAMP}, ",
        "#{processInstanceId,jdbcType=VARCHAR}, #{performanceId,jdbcType=BIGINT}, ",
        "#{remark,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, ",
        "#{deleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(CollectionCase record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @InsertProvider(type=CollectionCaseSqlProvider.class, method="insertSelective")
    int insertSelective(CollectionCase record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @SelectProvider(type=CollectionCaseSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="user_no", property="userNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
        @Result(column="product_source", property="productSource", jdbcType=JdbcType.TINYINT),
        @Result(column="product_code", property="productCode", jdbcType=JdbcType.INTEGER),
        @Result(column="overdue_days", property="overdueDays", jdbcType=JdbcType.INTEGER),
        @Result(column="amount", property="amount", jdbcType=JdbcType.DECIMAL),
        @Result(column="surplus_amount", property="surplusAmount", jdbcType=JdbcType.DECIMAL),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="allocation_time", property="allocationTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="finish_time", property="finishTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="emp_id", property="empId", jdbcType=JdbcType.BIGINT),
        @Result(column="talk_result", property="talkResult", jdbcType=JdbcType.TINYINT),
        @Result(column="collection_log_time", property="collectionLogTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="process_instance_id", property="processInstanceId", jdbcType=JdbcType.VARCHAR),
        @Result(column="performance_id", property="performanceId", jdbcType=JdbcType.BIGINT),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="version", property="version", jdbcType=JdbcType.INTEGER),
        @Result(column="deleted", property="deleted", jdbcType=JdbcType.TINYINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<CollectionCase> selectByExample(CollectionCaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @Select({
        "select",
        "id, user_no, user_id, product_source, product_code, overdue_days, amount, surplus_amount, ",
        "status, allocation_time, finish_time, emp_id, talk_result, collection_log_time, ",
        "process_instance_id, performance_id, remark, version, deleted, create_time, ",
        "update_time",
        "from collection_case",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="user_no", property="userNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
        @Result(column="product_source", property="productSource", jdbcType=JdbcType.TINYINT),
        @Result(column="product_code", property="productCode", jdbcType=JdbcType.INTEGER),
        @Result(column="overdue_days", property="overdueDays", jdbcType=JdbcType.INTEGER),
        @Result(column="amount", property="amount", jdbcType=JdbcType.DECIMAL),
        @Result(column="surplus_amount", property="surplusAmount", jdbcType=JdbcType.DECIMAL),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="allocation_time", property="allocationTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="finish_time", property="finishTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="emp_id", property="empId", jdbcType=JdbcType.BIGINT),
        @Result(column="talk_result", property="talkResult", jdbcType=JdbcType.TINYINT),
        @Result(column="collection_log_time", property="collectionLogTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="process_instance_id", property="processInstanceId", jdbcType=JdbcType.VARCHAR),
        @Result(column="performance_id", property="performanceId", jdbcType=JdbcType.BIGINT),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="version", property="version", jdbcType=JdbcType.INTEGER),
        @Result(column="deleted", property="deleted", jdbcType=JdbcType.TINYINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    CollectionCase selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @UpdateProvider(type=CollectionCaseSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") CollectionCase record, @Param("example") CollectionCaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @UpdateProvider(type=CollectionCaseSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") CollectionCase record, @Param("example") CollectionCaseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @UpdateProvider(type=CollectionCaseSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CollectionCase record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collection_case
     *
     * @mbg.generated Sat Sep 04 11:19:13 CST 2021
     */
    @Update({
        "update collection_case",
        "set user_no = #{userNo,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=BIGINT},",
          "product_source = #{productSource,jdbcType=TINYINT},",
          "product_code = #{productCode,jdbcType=INTEGER},",
          "overdue_days = #{overdueDays,jdbcType=INTEGER},",
          "amount = #{amount,jdbcType=DECIMAL},",
          "surplus_amount = #{surplusAmount,jdbcType=DECIMAL},",
          "status = #{status,jdbcType=TINYINT},",
          "allocation_time = #{allocationTime,jdbcType=TIMESTAMP},",
          "finish_time = #{finishTime,jdbcType=TIMESTAMP},",
          "emp_id = #{empId,jdbcType=BIGINT},",
          "talk_result = #{talkResult,jdbcType=TINYINT},",
          "collection_log_time = #{collectionLogTime,jdbcType=TIMESTAMP},",
          "process_instance_id = #{processInstanceId,jdbcType=VARCHAR},",
          "performance_id = #{performanceId,jdbcType=BIGINT},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "version = #{version,jdbcType=INTEGER},",
          "deleted = #{deleted,jdbcType=TINYINT},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(CollectionCase record);
}